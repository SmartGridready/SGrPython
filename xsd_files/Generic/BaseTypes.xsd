<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright (c) 2023, SmartGridready, Switzerland. All rights reserved. Source
https://github.com/SmartgridReady/SGrSpecifications  -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:sgr="http://www.smartgridready.com/ns/V0/"
  attributeFormDefault="unqualified" elementFormDefault="qualified"
  targetNamespace="http://www.smartgridready.com/ns/V0/" version="0.2.2">

  <include schemaLocation="BaseType_FunctionalProfileCategory.xsd" />
  <include schemaLocation="BaseType_LevelOfOperationType.xsd" />

  <complexType name="ReleaseNotes">
    <annotation>
      <documentation> Contains versioning, history and release states</documentation>
    </annotation>
    <sequence>
      <element name="state" type="sgr:ReleaseState" />
      <element name="remarks" type="string" minOccurs="0" />
      <element name="changeLog" type="sgr:ChangeLog" maxOccurs="unbounded" minOccurs="0" />
    </sequence>
  </complexType>
  <simpleType name="ReleaseState">
    <annotation>
      <documentation>release state of this XML</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="Draft" />
      <enumeration value="Review" />
      <enumeration value="Published" />
      <enumeration value="Revoked" />
    </restriction>
  </simpleType>
  <complexType name="ChangeLog">
    <annotation>
      <documentation>document history</documentation>
    </annotation>
    <sequence>
      <element name="version" type="string" />
      <element name="date" type="date" />
      <element name="author" type="string" />
      <element name="comment" type="string" />
    </sequence>
  </complexType>
  <simpleType name="SpecificationOwnerIdentification">
    <annotation>
      <documentation> This number identifies the organization that owns the specification. 0 is
        reserved for SmartGridready specifications, any other company will receive a number by the
        SmartGridready Deklarationsstelle. </documentation>
    </annotation>
    <restriction base="string" />
  </simpleType>
  <simpleType name="PrecisionPercent">
    <annotation>
      <documentation> Precision defines the accuracy of a data point either related to a measurement
        value, a simulation result or of a setpoint value </documentation>
    </annotation>
    <restriction base="decimal">
      <minInclusive value="0.001" />
      <maxInclusive value="15" />
    </restriction>
  </simpleType>
  <complexType name="AlternativeNames">
    <annotation>
      <documentation> a name list for EEBUS, IEC6850,, SAREF4ENER etc. Used to support ontology
        naming.</documentation>
    </annotation>
    <sequence>
      <element name="sLV1Name" type="string" minOccurs="0">
        <annotation>
          <documentation>
            Currently not used. Reserved for the future to secure legacy compatibility one we start renaming in future SGr label versions
          </documentation>
        </annotation>
      </element>
      <element name="workName" type="string" minOccurs="0">
        <annotation>
          <documentation>work name for temporary use</documentation>
        </annotation>
      </element>
      <element name="manufName" type="string" minOccurs="0">
        <annotation>
          <documentation>manufacturers may use an internal wording</documentation>
        </annotation>
      </element>
      <element name="iec61850Name" type="string" minOccurs="0">
        <annotation>
          <documentation>IEC 61850 terminology place to add the 61850 abbreviatuions</documentation>
        </annotation>
      </element>
      <element name="sarefName" type="string" minOccurs="0">
        <annotation>
          <documentation> SAREF for ENER terminology place to add the SAREF abbreviations
            (https://saref.etsi.org) </documentation>
        </annotation>
      </element>
      <element name="eebusName" type="string" minOccurs="0">
        <annotation>
          <documentation> EEBUS for terminology place to add the EEBUS abbreviations</documentation>
        </annotation>
      </element>
      <element name="sunSpecName" type="string" minOccurs="0">
        <annotation>
          <documentation> sSUNSPEC for terminology place to add the www.sunspec.org abbreviations</documentation>
        </annotation>
      </element>
      <element name="hpBwpName" type="string" minOccurs="0">
        <annotation>
          <documentation> bwp (German Heat Pump Association) for terminology place to add the bwp
            naming for HVAC</documentation>
        </annotation>
      </element>
      <element name="en17609Name" type="string" minOccurs="0">
        <annotation>
          <documentation>EN17609 terminology place to add the EU17609 abbreviations</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  
  <complexType name="FunctionalProfileIdentification">
    <annotation>
      <documentation> Specification of design source 0 means: specified by SmartGridready, the
        Profile number follows the SmargGirdready scheme &gt;0 means: specified by manufacturer hhhh,
        the Profile number follows a manufacturers scheme </documentation>
    </annotation>
    <sequence>
      <element name="specificationOwnerIdentification" type="sgr:SpecificationOwnerIdentification" />
      <element name="functionalProfileCategory" type="sgr:FunctionalProfileCategory">
        <annotation>
          <documentation>The Profile Identification identifies the main profile classes. The
            enumeration text is also documented with numbers being referenced in the profile number
            hhhh.nnnn.uuuu.ss.VV.vv as nnnn </documentation>
        </annotation>
      </element>
      <element name="functionalProfileType" type="string" />
      <element name="levelOfOperation" type="sgr:LevelOfOperation">
        <annotation>
          <documentation> levelOfOperation defines a controls complexity level m) for read-only
            monitoring data points level 1) single contact 2) 2 or more contacts /state controlled
            interface 3) statistical defined characteristics tables 4) dynamic real-time control
            combined with statistical defined characteristics tables 5) dynamic real-time control
            combined with dynamic changeable characteristics tables 6) prediction based systems </documentation>
        </annotation>
      </element>
      <element name="versionNumber" type="sgr:VersionNumber" />
    </sequence>
  </complexType>

  <!-- help construct to support definition of types valid for the code generator -->
  <complexType name="EmptyType">
    <sequence />
  </complexType>

  <!-- mapping table containing modbus to generic enumeration mapping records -->
  <complexType name="Enum">
    <annotation>
      <documentation>Enum of states. Maps device-specific register values (ordinals) to literals.</documentation>
    </annotation>
    <sequence>
      <element name="enumEntry" type="sgr:EnumEntry" maxOccurs="unbounded" />
      <element name="hexMask" type="hexBinary" minOccurs="0" >
        <annotation>
          <documentation>hex mask for bit-wise AND before evaluating the enum</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>

  <!-- defines a single mapping from an enum literal to an ordinal (integer) value -->
  <complexType name="EnumEntry">
    <annotation>
      <documentation>Maps a device specific ordinal to its literal</documentation>
    </annotation>
    <sequence>
      <element name="literal" type="string" />
      <element name="ordinal" type="int" />
      <choice minOccurs="0">
        <element name="description" type="string"/>
      </choice>
    </sequence>
  </complexType>

  <!-- defines a single mapping from an enum literal to an ordinal (integer) value -->
  <complexType name="EnumEntryRecordFunctionalProfile">
    <sequence>
      <element name="literal" type="string" />
      <choice minOccurs="0">
        <element name="description" type="string"/>
      </choice>
    </sequence>
  </complexType>

  <!-- defines a single mapping from an enum literal to an ordinal (integer) value -->
  <complexType name="EnumEntryProductRecord">
    <sequence>
      <element name="literal" type="string" />
      <element name="ordinal" type="int" minOccurs="0" />
      <choice minOccurs="0">
        <element name="description" type="string"/>
      </choice>
    </sequence>
  </complexType>

  <!-- mapping table containing modbus to generic enumeration mapping records -->
  <complexType name="EnumMapFunctionalProfile">
    <sequence>
      <element name="enumEntry" type="sgr:EnumEntryRecordFunctionalProfile" maxOccurs="unbounded" />
      <element name="hexMask" type="hexBinary" minOccurs="0"/>
    </sequence>
  </complexType>

  <!-- mapping table containing modbus to generic enumeration mapping records -->
  <complexType name="EnumMapProduct">
    <sequence>
      <element name="enumEntry" type="sgr:EnumEntryProductRecord" maxOccurs="unbounded" />
      <element name="hexMask" type="hexBinary" minOccurs="0"/>
    </sequence>
  </complexType>

  <!-- defines a list of bit mapping records that maps bits to a literal -->
  <complexType name="BitmapProduct">
    <annotation>
      <documentation>bitmap for status bits. Maps device-specific
        bit patterns (as hex mask) to literals.</documentation>
    </annotation>
    <sequence>
      <element name="bitmapEntry" type="sgr:BitmapEntryProduct" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <!-- defines a list of bit mapping records that maps bits to a literal -->
  <complexType name="BitmapFunctionalProfile">
    <annotation>
      <documentation>bitmap for status bits. Maps device-specific
        bit patterns (as hex mask) to literals.</documentation>
    </annotation>
    <sequence>
      <element name="bitmapEntry" type="sgr:BitmapEntryFunctionalProfile" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <!-- defines a single mapping record -->
  <complexType name="BitmapEntryProduct">
    <annotation>
      <documentation>Maps a device-specific bit mask to a literal</documentation>
    </annotation>
    <sequence>
      <element name="literal" type="string" />
      <element name="hexMask" type="hexBinary" />
      <choice minOccurs="0">
        <element name="description" type="string"/>
      </choice>
    </sequence>
  </complexType>  

  <!-- defines a single mapping record -->
  <complexType name="BitmapEntryFunctionalProfile">
    <annotation>
      <documentation>Maps a device-specific bit mask to a literal</documentation>
    </annotation>
    <sequence>
      <element name="literal" type="string" />
      <choice minOccurs="0">
        <element name="description" type="string"/>
      </choice>
    </sequence>
  </complexType>  

  <!-- the basic data based used für the generic level of a communicator -->
  <group name="DataType">
    <annotation>
      <documentation>Generic high-level data types. Implementations of this XSD map these types
        into native data types in their programming language (java, python, go lang, ...)</documentation>
    </annotation>
    <choice>
      <element name="boolean" type="sgr:EmptyType" />
      <element name="int8" type="sgr:EmptyType" />
      <element name="int16" type="sgr:EmptyType" />
      <element name="int32" type="sgr:EmptyType" />
      <element name="int64" type="sgr:EmptyType" />
      <element name="int8U" type="sgr:EmptyType" />
      <element name="int16U" type="sgr:EmptyType" />
      <element name="int32U" type="sgr:EmptyType" />
      <element name="int64U" type="sgr:EmptyType" />
      <element name="float32" type="sgr:EmptyType" />
      <element name="float64" type="sgr:EmptyType" />
      <element name="dateTime" type="sgr:EmptyType" />
      <element name="string" type="sgr:EmptyType" />
    </choice>
  </group>

  <!-- the basic data based used für the generic level of a communicator -->
  <complexType name="DataTypeProduct">
    <annotation>
      <documentation>Generic high-devel data types. Implementations of this XSD map these types
        into native data types in their programming language (java, python, go lang, ...)</documentation>
    </annotation>
    <choice>
      <element name="enum" type="sgr:EnumMapProduct" />
      <element name="bitmap" type="sgr:BitmapProduct" />
      <element name="json" type="sgr:EmptyValue" />
      <group ref="sgr:DataType" />
    </choice>
  </complexType>

  <complexType name="JSonElemFunctionalProfile">
    <sequence>
      <element name="key" type="string"/>
      <choice>
        <element name="date" type="sgr:EmptyValue"/>
        <element name="string" type="sgr:EmptyValue"/>
        <element name="number" type="sgr:EmptyValue"/>
      </choice>
    </sequence>
  </complexType>

  <complexType name="RequestParam">
    <sequence>
      <element name="param" type="sgr:JSonElemFunctionalProfile" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <complexType name="JSonArrayOutputFunctionalProfile">
    <sequence>
      <element name="name" type="string" minOccurs="0" maxOccurs="1"/>
      <choice minOccurs="0" maxOccurs="unbounded">
        <element name="array" type="sgr:JSonArrayOutputFunctionalProfile"/>
        <element name="elem" type="sgr:JSonElemFunctionalProfile"/>
      </choice>
    </sequence>
  </complexType>

  <complexType name="JSonOutputFunctionalProfile">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="array" type="sgr:JSonArrayOutputFunctionalProfile"/>
      <element name="elem" type="sgr:JSonElemFunctionalProfile"/>
    </choice>
  </complexType>

  <!-- the basic data based used for the generic level of a communicator -->
  <complexType name="DataTypeFunctionalProfile">
    <annotation>
      <documentation>Generic high-level data types. Implementations of this XSD map these types
        into native data types in their programming language (java, python, golang, ...)</documentation>
    </annotation>
    <choice>
      <element name="enum" type="sgr:EnumMapFunctionalProfile" />
      <element name="bitmap" type="sgr:BitmapFunctionalProfile" />
      <element name="json" type="sgr:JSonOutputFunctionalProfile"/>
      <group ref="sgr:DataType" />
    </choice>
  </complexType>

  <!-- enumeration to select mandatory, optional or recommended use of elements -->
  <simpleType name="PresenceLevel">
    <annotation>
      <documentation>Indicates whether the element is mandatory (M), recommended (R, at least one of
        the R elements must be present), or optional (O, can be omitted)</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="M" />
      <enumeration value="R" />
      <enumeration value="O" />
    </restriction>
  </simpleType>

  <!-- enumeration to select data direction (Read Write) and persistent storage 
		use of elements -->
  <simpleType name="DataDirection">
    <annotation>
      <documentation>Read/write direction with read (R), write (W), read-write (RW), read-write with
        persistent storage (RWP)</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="R" />
      <enumeration value="W" />
      <enumeration value="RW" />
      <enumeration value="RWP" />
    </restriction>
  </simpleType>
  <!-- create a new title as separator in between type definitions -->
  <complexType name="LegibleDescription">
    <annotation>
      <documentation> This element us used to extend the definitions with legible text elements: a
        short understandable explanation of the items addressed. These elements are used for printed
        and published information </documentation>
    </annotation>
    <sequence>
      <element name="textElement">
        <annotation>
          <documentation>information to be published</documentation>
        </annotation>
        <simpleType>
          <restriction base="string">
            <minLength value="0" />
            <maxLength value="4000" />
          </restriction>
        </simpleType>
      </element>
      <element name="language" type="sgr:Language">
        <annotation>
          <documentation>language identifier de, en, fr, it</documentation>
        </annotation>
      </element>
      <element name="uri" type="anyURI" minOccurs="0">
        <annotation>
          <documentation>optional URI pointing towards additional information</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="Language">
    <annotation>
      <documentation>this is the identification of the language for information to be published. So
        far en, de, fr and it is possible </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="de" />
      <enumeration value="en" />
      <enumeration value="fr" />
      <enumeration value="it" />
    </restriction>
  </simpleType>
  <complexType name="VersionNumber">
    <annotation>
      <documentation>a three digit version mumber system.</documentation>
    </annotation>
    <sequence>
      <element name="primaryVersionNumber" type="int" />
      <element name="secondaryVersionNumber" type="int" />
      <element name="subReleaseVersionNumber" type="int" />
    </sequence>
  </complexType>
  <simpleType name="DeviceCategory">
    <annotation>
      <documentation>Device Category is inherited from EEBUS, a growing list of supported Devices</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="Battery" />
      <enumeration value="Compressor" />
      <enumeration value="DeviceInformation" />
      <enumeration value="DHWCircuit" />
      <enumeration value="DHWStorage" />
      <enumeration value="Dishwasher" />
      <enumeration value="Dryer" />
      <enumeration value="ElectricalImmersionHeater" />
      <enumeration value="Fan" />
      <enumeration value="GasHeatingAppliance" />
      <enumeration value="Generic" />
      <enumeration value="HeatingBufferStorage" />
      <enumeration value="HeatingCircuit" />
      <enumeration value="HeatingObject" />
      <enumeration value="HeatingZone" />
      <enumeration value="HeatPumpAppliance" />
      <enumeration value="HeatSinkCircuit" />
      <enumeration value="HeatSourceCircuit" />
      <enumeration value="HeatSourceUnit" />
      <enumeration value="HVACController" />
      <enumeration value="HVACRoom" />
      <enumeration value="InstantDHWHeater" />
      <enumeration value="Inverter" />
      <enumeration value="OilHeatingAppliance" />
      <enumeration value="Pump" />
      <enumeration value="RefrigerantCircuit" />
      <enumeration value="SmartEnergyAppliance" />
      <enumeration value="SolarDHWStorage" />
      <enumeration value="SolarThermalCircuit" />
      <enumeration value="SubMeterElectricity" />
      <enumeration value="TemperatureSensor" />
      <enumeration value="Washer" />
      <enumeration value="BatterySystem" />
      <enumeration value="ElectricityGenerationSystem" />
      <enumeration value="ElectricityStorageSystem" />
      <enumeration value="SGCP">
        <annotation>
          <documentation>EEBUS: GridConnectionPointOfPremises</documentation>
        </annotation>
      </enumeration>
      <enumeration value="Household" />
      <enumeration value="PVSystem" />
      <enumeration value="EV" />
      <enumeration value="EVSE" />
      <enumeration value="ChargingStation">
        <annotation>
          <documentation>EEBUS: ChargingOutlet</documentation>
        </annotation>
      </enumeration>
      <enumeration value="Actuator" />
      <enumeration value="CEM" />
    </restriction>
  </simpleType>
  <simpleType name="Units">
    <restriction base="string">
      <!-- <enumeration value="AMPERE_SQUARE_METERS" /> -->
      <enumeration value="AMPERES" />
      <!-- <enumeration value="AMPERES_PER_METER" /> -->
      <!-- <enumeration value="AMPERES_PER_SQUARE_METER" /> -->
      <enumeration value="BARS" />
      <!-- <enumeration value="BTUS" /> -->
      <!-- <enumeration value="BTUS_PER_HOUR" /> -->
      <!-- <enumeration value="BTUS_PER_POUND" /> -->
      <!-- <enumeration value="BTUS_PER_POUND_DRY_AIR" /> -->
      <!-- <enumeration value="CANDELAS" /> -->
      <!-- <enumeration value="CANDELAS_PER_SQUARE_METER" /> -->
      <!-- <enumeration value="CENTIMETERS" /> -->
      <!-- <enumeration value="CENTIMETERS_OF_MERCURY" /> -->
      <!-- <enumeration value="CENTIMETERS_OF_WATER" /> -->
      <!-- <enumeration value="CUBIC_FEET" /> -->
      <!-- <enumeration value="CUBIC_FEET_PER_MINUTE" /> -->
      <!-- <enumeration value="CUBIC_FEET_PER_SECOND" /> -->
      <enumeration value="CUBIC_METERS" />
      <!-- <enumeration value="CUBIC_METERS_PER_HOUR" /> -->
      <!-- <enumeration value="CUBIC_METERS_PER_MINUTE" /> -->
      <enumeration value="CUBIC_METERS_PER_SECOND" />
      <!-- <enumeration value="CURRENCY1" /> -->
      <!-- <enumeration value="CURRENCY10" /> -->
      <!-- <enumeration value="CURRENCY2" /> -->
      <!-- <enumeration value="CURRENCY3" /> -->
      <!-- <enumeration value="CURRENCY4" /> -->
      <!-- <enumeration value="CURRENCY5" /> -->
      <!-- <enumeration value="CURRENCY6" /> -->
      <!-- <enumeration value="CURRENCY7" /> -->
      <!-- <enumeration value="CURRENCY8" /> -->
      <!-- <enumeration value="CURRENCY9" /> -->
      <!-- <enumeration value="CYCLES_PER_HOUR" /> -->
      <!-- <enumeration value="CYCLES_PER_MINUTE" /> -->
      <!-- <enumeration value="DAYS" /> -->
      <!-- <enumeration value="DEGREE_DAYS_CELSIUS" /> -->
      <!-- <enumeration value="DEGREE_DAYS_FAHRENHEIT" /> -->
      <!-- <enumeration value="DEGREES_ANGULAR" /> -->
      <enumeration value="DEGREES_CELSIUS" />
      <!-- <enumeration value="DEGREES_CELSIUS_PER_HOUR" /> -->
      <!-- <enumeration value="DEGREES_CELSIUS_PER_MINUTE" /> -->
      <!-- <enumeration value="DEGREES_FAHRENHEIT" /> -->
      <!-- <enumeration value="DEGREES_FAHRENHEIT_PER_HOUR" /> -->
      <!-- <enumeration value="DEGREES_FAHRENHEIT_PER_MINUTE" /> -->
      <!-- <enumeration value="DEGREES_KELVIN" /> -->
      <!-- <enumeration value="DEGREES_KELVIN_PER_HOUR" /> -->
      <!-- <enumeration value="DEGREES_KELVIN_PER_MINUTE" /> -->
      <enumeration value="DEGREES_PHASE" />
      <!-- <enumeration value="DELTA_DEGREES_FAHRENHEIT" /> -->
      <!-- <enumeration value="DELTA_DEGREES_KELVIN" /> -->
      <!-- <enumeration value="FARADS" /> -->
      <!-- <enumeration value="FEET" /> -->
      <!-- <enumeration value="FEET_PER_MINUTE" /> -->
      <!-- <enumeration value="FEET_PER_SECOND" /> -->
      <!-- <enumeration value="FOOT_CANDLES" /> -->
      <!-- <enumeration value="GIGAJOULES" /> -->
      <!-- <enumeration value="GRAMS_OF_WATER_PER_KILOGRAM_DRY_AIR" /> -->
      <!-- <enumeration value="GRAMS_PER_MINUTE" /> -->
      <!-- <enumeration value="GRAMS_PER_SECOND" /> -->
      <!-- <enumeration value="HECTOPASCALS" /> -->
      <!-- <enumeration value="HENRYS" /> -->
      <enumeration value="HERTZ" />
      <!-- <enumeration value="HORSEPOWER" /> -->
      <enumeration value="HOURS" />
      <!-- <enumeration value="HUNDREDTHS_SECONDS" /> -->
      <!-- <enumeration value="IMPERIAL_GALLONS" /> -->
      <!-- <enumeration value="IMPERIAL_GALLONS_PER_MINUTE" /> -->
      <!-- <enumeration value="INCHES" /> -->
      <!-- <enumeration value="INCHES_OF_MERCURY" /> -->
      <!-- <enumeration value="INCHES_OF_WATER" /> -->
      <!-- <enumeration value="JOULE_SECONDS" /> -->
      <enumeration value="JOULES" />
      <!-- <enumeration value="JOULES_PER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="JOULES_PER_KILOGRAM_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="JOULES_PER_KILOGRAM_DRY_AIR" /> -->
      <!-- <enumeration value="KILO_BTUS" /> -->
      <!-- <enumeration value="KILO_BTUS_PER_HOUR" /> -->
      <enumeration value="KILOGRAMS" />
      <!-- <enumeration value="KILOGRAMS_PER_CUBIC_METER" /> -->
      <!-- <enumeration value="KILOGRAMS_PER_HOUR" /> -->
      <!-- <enumeration value="KILOGRAMS_PER_MINUTE" /> -->
      <!-- <enumeration value="KILOGRAMS_PER_SECOND" /> -->
      <!-- <enumeration value="KILOHERTZ" /> -->
      <!-- <enumeration value="KILOOHMS" /> -->
      <!-- <enumeration value="KILOJOULES" /> -->
      <!-- <enumeration value="KILOJOULES_PER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="KILOJOULES_PER_KILOGRAM" /> -->
      <!-- <enumeration value="KILOJOULES_PER_KILOGRAM_DRY_AIR" /> -->
      <!-- <enumeration value="KILOMETERS_PER_HOUR" /> -->
      <!-- <enumeration value="KILOPASCALS" /> -->
      <enumeration value="KILOVOLT_AMPERES" />
      <enumeration value="KILOVOLT_AMPERE_HOURS" />
      <enumeration value="KILOVOLT_AMPERES_REACTIVE" />
      <enumeration value="KILOVOLT_AMPERES_REACTIVE_HOURS" />
      <!-- <enumeration value="KILOVOLTS" /> -->
      <enumeration value="KILOWATT_HOURS" />
      <enumeration value="KILOWATTS" />
      <!-- <enumeration value="KW_HOURS_PER_SQUARE_FOOT" /> -->
      <!-- <enumeration value="KW_HOURS_PER_SQUARE_METER" /> -->
      <!-- <enumeration value="LITERS" /> -->
      <!-- <enumeration value="LITERS_PER_HOUR" /> -->
      <!-- <enumeration value="LITERS_PER_MINUTE" /> -->
      <!-- <enumeration value="LITERS_PER_SECOND" /> -->
      <!-- <enumeration value="LUMENS" /> -->
      <!-- <enumeration value="LUXES" /> -->
      <!-- <enumeration value="MEGA_BTUS" /> -->
      <!-- <enumeration value="MEGAHERTZ" /> -->
      <!-- <enumeration value="MEGAJOULES" /> -->
      <!-- <enumeration value="MEGAJOULES_PER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="MEGAJOULES_PER_KILOGRAM_DRY_AIR" /> -->
      <!-- <enumeration value="MEGAJOULES_PER_SQUARE_FOOT" /> -->
      <!-- <enumeration value="MEGAJOULES_PER_SQUARE_METER" /> -->
      <!-- <enumeration value="MEGAVOLT_AMPERES" /> -->
      <!-- <enumeration value="MEGAVOLT_AMPERES_REACTIVE" /> -->
      <!-- <enumeration value="MEGAVOLTS" /> -->
      <enumeration value="MEGAWATT_HOURS" />
      <!-- <enumeration value="MEGAWATTS" /> -->
      <!-- <enumeration value="MEGOHMS" /> -->
      <enumeration value="METERS" />
      <!-- <enumeration value="METERS_PER_HOUR" /> -->
      <!-- <enumeration value="METERS_PER_MINUTE" /> -->
      <enumeration value="METERS_PER_SECOND" />
      <enumeration value="METERS_PER_SECOND_PER_SECOND" />
      <!-- <enumeration value="MILES_PER_HOUR" /> -->
      <!-- <enumeration value="MILLIAMPERES" /> -->
      <!-- <enumeration value="MILLIBARS" /> -->
      <!-- <enumeration value="MILLIMETERS" /> -->
      <!-- <enumeration value="MILLIMETERS_OF_MERCURY" /> -->
      <!-- <enumeration value="MILLIMETERS_PER_MINUTE" /> -->
      <!-- <enumeration value="MILLIMETERS_PER_SECOND" /> -->
      <!-- <enumeration value="MILLIOHMS" /> -->
      <!-- <enumeration value="MILLISECONDS" /> -->
      <!-- <enumeration value="MILLIVOLTS" /> -->
      <!-- <enumeration value="MILLIWATTS" /> -->
      <enumeration value="MINUTES" />
      <!-- <enumeration value="MONTHS" /> -->
      <!-- <enumeration value="NEWTON" /> -->
      <!-- <enumeration value="NEWTON_METERS" /> -->
      <!-- <enumeration value="NEWTON_SECONDS" /> -->
      <!-- <enumeration value="NEWTONS_PER_METER" /> -->
      <enumeration value="NO_UNITS" />
      <!-- <enumeration value="OHM_METERS" /> -->
      <enumeration value="OHMS" />
      <!-- <enumeration value="PARTS_PER_BILLION" /> -->
      <enumeration value="PARTS_PER_MILLION" />
      <enumeration value="PASCALS" />
      <enumeration value="PER_HOUR" />
      <!-- <enumeration value="PER_MINUTE" /> -->
      <!-- <enumeration value="PER_SECOND" /> -->
      <enumeration value="PERCENT" />
      <!-- <enumeration value="PERCENT_OBSCURATION_PER_FOOT" /> -->
      <!-- <enumeration value="PERCENT_OBSCURATION_PER_METER" /> -->
      <!-- <enumeration value="PERCENT_PER_SECOND" /> -->
      <enumeration value="PERCENT_RELATIVE_HUMIDITY" />
      <!-- <enumeration value="POUNDS_FORCE_PER_SQUARE_INCH" /> -->
      <!-- <enumeration value="POUNDS_MASS" /> -->
      <!-- <enumeration value="POUNDS_MASS_PER_HOUR" /> -->
      <!-- <enumeration value="POUNDS_MASS_PER_MINUTE" /> -->
      <!-- <enumeration value="POUNDS_MASS_PER_SECOND" /> -->
      <enumeration value="POWER_FACTOR" />
      <!-- <enumeration value="PSI_PER_DEGREE_FAHRENHEIT" /> -->
      <enumeration value="RADIANS" />
      <enumeration value="RADIANS_PER_SECOND" />
      <enumeration value="REVOLUTIONS_PER_MINUTE" />
      <enumeration value="SECONDS" />
      <!-- <enumeration value="SIEMENS" /> -->
      <!-- <enumeration value="SIEMENS_PER_METER" /> -->
      <!-- <enumeration value="SQUARE_CENTIMETERS" /> -->
      <!-- <enumeration value="SQUARE_FEET" /> -->
      <!-- <enumeration value="SQUARE_INCHES" /> -->
      <enumeration value="SQUARE_METERS" />
      <!-- <enumeration value="SQUARE_METERS_PER_NEWTON" /> -->
      <!-- <enumeration value="TESLAS" /> -->
      <!-- <enumeration value="THERMS" /> -->
      <!-- <enumeration value="TON_HOURS" /> -->
      <!-- <enumeration value="TONS" /> -->
      <!-- <enumeration value="TONS_PER_HOUR" /> -->
      <!-- <enumeration value="TONS_REFRIGERATION" /> -->
      <!-- <enumeration value="US_GALLONS" /> -->
      <!-- <enumeration value="US_GALLONS_PER_MINUTE" /> -->
      <enumeration value="VOLT_AMPERES" />
      <enumeration value="VOLT_AMPERES_REACTIVE" />
      <enumeration value="VOLTS" />
      <!-- <enumeration value="VOLTS_PER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="VOLTS_PER_METER" /> -->
      <enumeration value="WATT_HOURS" />
      <enumeration value="WATTS" />
      <!-- <enumeration value="WATTS_PER_METER_PER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="WATTS_PER_SQUARE_FOOT" /> -->
      <!-- <enumeration value="WATTS_PER_SQUARE_METER" /> -->
      <!-- <enumeration value="WATTS_PER_SQUARE_METER_DEGREE_KELVIN" /> -->
      <!-- <enumeration value="WEBERS" /> -->
      <!-- <enumeration value="WEEKS" /> -->
      <!-- <enumeration value="YEARS" /> -->
      <enumeration value="NONE" />
    </restriction>
  </simpleType>
  <complexType name="ScalingFactor">
    <annotation>
      <documentation>scaled_value = value * multiplicator * 10^powerof10 This type is used for to
        convert integer datapoint values into floats only </documentation>
    </annotation>
    <sequence>
      <element name="multiplicator" type="int" />
      <element name="powerof10" type="int" />
    </sequence>
  </complexType>

  <simpleType name="EmptyValue">
    <restriction base="string">
      <enumeration value="" />
    </restriction>
  </simpleType>

  <simpleType name="EmptyOrFloat">
    <union memberTypes="float sgr:EmptyValue" />
  </simpleType>

  <simpleType name="EmptyOrDouble">
    <union memberTypes="double sgr:EmptyValue" />
  </simpleType>

  <simpleType name="EmptyOrDecimal">
    <union memberTypes="decimal sgr:EmptyValue" />
  </simpleType>

  <simpleType name="EmptyOrUnsignedLong">
    <union memberTypes="unsignedLong sgr:EmptyValue" />
  </simpleType>

  <complexType name="GenericAttributeFunctionalProfile">
    <sequence>
      <element name="name" type="string" />
    </sequence>
  </complexType>
  <complexType name="GenericAttributeProduct">
    <sequence>
      <element name="name" type="string" />
      <choice>
        <sequence>
          <element name="dataType" type="sgr:DataTypeProduct" />
          <element name="value" type="string"/>
          <element name="unit" type="sgr:Units"/>
        </sequence>
        <element name="genericAttributeList" type="sgr:GenericAttributeListProductEnd" />
      </choice>
    </sequence>
  </complexType>
  <complexType name="GenericAttributeProductEnd">
    <sequence>
      <element name="name" type="string" />
      <choice>
        <sequence>
          <element name="dataType" type="sgr:DataTypeProduct" />
          <element name="value" type="string"/>
          <element name="unit" type="sgr:Units"/>
        </sequence>
      </choice>
    </sequence>
  </complexType>
  <complexType name="GenericAttributeListFunctionalProfile">
    <sequence>
      <element name="genericAttributeListElement" type="sgr:GenericAttributeFunctionalProfile" maxOccurs="unbounded" minOccurs="1" />
    </sequence>
  </complexType>
  <complexType name="GenericAttributeListProduct">
    <sequence>
      <element name="genericAttributeListElement" type="sgr:GenericAttributeProduct" maxOccurs="unbounded" minOccurs="1" />
    </sequence>
  </complexType>
  <complexType name="GenericAttributeListProductEnd">
    <sequence>
      <element name="genericAttributeListElement" type="sgr:GenericAttributeProductEnd" maxOccurs="unbounded" minOccurs="1" />
    </sequence>
  </complexType>

  <!--  generic Enumeration Definitions  -->
  <simpleType name="MeasuredValueType">
    <restriction base="string">
      <enumeration value="value" />
      <enumeration value="min" />
      <enumeration value="max" />
      <enumeration value="average" />
      <enumeration value="stdDev" />
    </restriction>
  </simpleType>
  <simpleType name="MeasuredValueSource">
    <annotation>
      <documentation>E0003</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="measuredValue" />
      <enumeration value="calculatedValue" />
      <enumeration value="empiricalValue" />
    </restriction>
  </simpleType>
  <simpleType name="PowerSource">
    <annotation>
      <documentation>E0004</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="unknown" />
      <enumeration value="mains1Phase" />
      <enumeration value="mains3Phase" />
      <enumeration value="battery" />
      <enumeration value="dc" />
    </restriction>
  </simpleType>
  <simpleType name="SGCPServiceType">
    <annotation>
      <documentation> E0013: Assistance type of a reaction / function. This Attribute indicates the
        type of Flexibility Entity of the operation NET serviceable: Operation for the benefit of a
        distribution network operator (DSO) SYS serviceable: Operation of the total system operators
        (TSO) ENER serviceable: Operation for energy optimization </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="AT_NetServiceable" />
      <enumeration value="AT_SysServiceable" />
      <enumeration value="AT_EnerServiceable" />
    </restriction>
  </simpleType>
  <simpleType name="ObligLVlType">
    <annotation>
      <documentation>E0014: Obligation level of a reaction / function. SHALL: action is required
        SHOULD: action is strongly recommended MAY: action is permitted </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="OL_SHALL" />
      <enumeration value="OL_SHOULD" />
      <enumeration value="OL_MAY" />
    </restriction>
  </simpleType>
  <simpleType name="HovType">
    <annotation>
      <documentation>Ehov8:</documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="tbd" />
    </restriction>
  </simpleType>

</schema>
