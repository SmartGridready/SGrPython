from dataclasses import dataclass, field
from typing import List, Optional
from data_classes.generic.sgr_data_point_description_type import SgrDataPointDescriptionType
from data_classes.generic.sgr_device_profile_type import SgrDeviceProfileType
from data_classes.generic.sgr_enum_manufacturer_idtype import SgrManufacturerIdtype
from data_classes.generic.sgr_gen_type_definitions import SgrAttr4GenericType
from data_classes.generic.sgr_profile_description_type import SgrProfileDescriptionType

__NAMESPACE__ = "http://www.smartgridready.com/ns/V0/"


@dataclass
class SgrDataPointBaseType:
    """
    Base data point type.
    """
    class Meta:
        name = "SGrDataPointBaseType"

    data_point: Optional[SgrDataPointDescriptionType] = field(
        default=None,
        metadata={
            "name": "dataPoint",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
            "required": True,
        }
    )
    gen_attribute: List[SgrAttr4GenericType] = field(
        default_factory=list,
        metadata={
            "name": "genAttribute",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
        }
    )


@dataclass
class SgrDeviceBaseType:
    """
    Base type for device.

    :ivar device_profile:
    :ivar gen_attribute:
    :ivar device_name: Device Name in the context of the ManufacturerID
    :ivar manufacturer_name: Name of the Manufacturer or OEM
    :ivar manufacturer_id: the identifier as enumeration indicates that
        the manufacturer is related with the organisation and that this
        external interface is generated by himself
    :ivar is_local_control: Value "false" means "is cloud control
        device", indicating that this service is based on cloud. "True"
        indicates that services are provided within the range of the
        local area.
    """
    class Meta:
        name = "SGrDeviceBaseType"

    device_profile: Optional[SgrDeviceProfileType] = field(
        default=None,
        metadata={
            "name": "deviceProfile",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
            "required": True,
        }
    )
    gen_attribute: Optional[SgrAttr4GenericType] = field(
        default=None,
        metadata={
            "name": "genAttribute",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
        }
    )
    device_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "deviceName",
            "type": "Attribute",
        }
    )
    manufacturer_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "manufacturerName",
            "type": "Attribute",
        }
    )
    manufacturer_id: Optional[SgrManufacturerIdtype] = field(
        default=None,
        metadata={
            "name": "manufacturerID",
            "type": "Attribute",
        }
    )
    is_local_control: Optional[bool] = field(
        default=None,
        metadata={
            "name": "isLocalControl",
            "type": "Attribute",
        }
    )


@dataclass
class SgrFunctionalProfileBaseType:
    """
    Base type for functional profile.
    """
    class Meta:
        name = "SGrFunctionalProfileBaseType"

    functional_profile: Optional[SgrProfileDescriptionType] = field(
        default=None,
        metadata={
            "name": "functionalProfile",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
            "required": True,
        }
    )
    gen_attribute: List[SgrAttr4GenericType] = field(
        default_factory=list,
        metadata={
            "name": "genAttribute",
            "type": "Element",
            "namespace": "http://www.smartgridready.com/ns/V0/",
        }
    )
