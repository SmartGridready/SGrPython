name: Release Python SGrSpecification

on:
  repository_dispatch:
    types: [ new-tag-created ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to checkout and build'
        required: true
      semver:
        description: 'Package version to deploy'
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_bump.outputs.new_version }}
      original_tag: ${{ steps.set_tag.outputs.original_tag}}
      semver: ${{ steps.set_tag.outputs.semver}}
    steps:
      - name: Set tag
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Original tag: ${{ github.event.inputs.tag }}"
            TAG="${{ github.event.inputs.tag }}"
          else
            echo "Original tag: ${{ github.event.client_payload.tag }}"
            TAG="${{ github.event.client_payload.tag }}"
          fi
          if [ -z "${{ github.event.inputs.semver }}" ]; then
            if [[ "${TAG}" =~ ^"v" ]]; then
              SEMVER="${TAG:1}"  # This removes the first character, assuming it's 'v'
            else
              SEMVER="${TAG}"
            fi
          else
            SEMVER="${{ github.event.inputs.semver }}"
          fi
          echo "Semver: $SEMVER"
          echo "Tag: $TAG"
          echo "::set-output name=original_tag::$TAG"
          echo "::set-output name=semver::$SEMVER"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install xsdata[cli]==25.* twine build

      - name: Check Python and xsdata versions
        run: |
          python --version
          pip show xsdata

      - name: Checkout SGrSpecifications Repository
        uses: actions/checkout@v5
        with:
          repository: 'SmartGridready/SGrSpecifications'
          ref: ${{ steps.set_tag.outputs.original_tag }}
          path: SGrSpecifications

      - name: Checkout SGrPython Repository
        uses: actions/checkout@v5
        with:
          path: SGrPython

      - name: Generate specification classes with xsdata
        working-directory: SGrPython/specification/src
        run: xsdata generate ../../../SGrSpecifications/SchemaDatabase/SGr -r --package sgr_specification.v0

      - name: Copy specification schema files
        working-directory: SGrPython/specification/src/sgr_schema
        run: cp -fR ../../../../SGrSpecifications/SchemaDatabase/SGr/* .

      - name: Check SGrPython Directory
        run: ls SGrPython

      - name: Modify Specification Setup File
        if: ${{ steps.set_tag.outputs.semver != '' }}
        working-directory: SGrPython/specification
        run: |
          sed -Ei "s/version=\"[^\"]+\",/version=\"${{ steps.set_tag.outputs.semver }}\",/" setup.py
          cat setup.py
          echo "tag = ${{ steps.set_tag.outputs.original_tag }}, semver = ${{ steps.set_tag.outputs.semver }}"

      - name: Build Specification Package
        id: build
        working-directory: SGrPython/specification
        run: python -m build

      - name: Publish Specification Package to PyPI
        # publish if output version was defined
        if: (steps.build.outcome == 'success') && (steps.set_tag.outputs.semver != '')
        uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: SGrPython/specification/dist/
