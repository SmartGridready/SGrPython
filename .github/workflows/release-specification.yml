name: Release Python SGrSpecification

on:
  repository_dispatch:
    types: [ new-tag-created ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to checkout and build'
        required: true
      semver:
        description: 'Package version to deploy'
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_bump.outputs.new_version }}
      original_tag: ${{ steps.set_tag.outputs.original_tag}}
      semver: ${{ steps.set_tag.outputs.semver}}
    steps:
      - name: Set tag
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Original tag: ${{ github.event.inputs.tag }}"
            TAG="${{ github.event.inputs.tag }}"
          else
            echo "Original tag: ${{ github.event.client_payload.tag }}"
            TAG="${{ github.event.client_payload.tag }}"
          fi
          if [ -z "${{ github.event.inputs.semver }}" ]; then
            if [[ "${TAG}" =~ ^"v" ]]; then
              SEMVER="${TAG:1}"  # This removes the first character, assuming it's 'v'
            else
              SEMVER="${TAG}"
            fi
          else
            SEMVER="${{ github.event.inputs.semver }}"
          fi
          echo "Semver: $SEMVER"
          echo "Tag: $TAG"
          echo "::set-output name=original_tag::$TAG"
          echo "::set-output name=semver::$SEMVER"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install xsdata[cli] wheel twine setuptools

      - name: Check Python and xsdata versions
        run: |
          python --version
          pip show xsdata

      - name: Checkout SGrSpecifications Repository
        uses: actions/checkout@v4
        with:
          repository: 'SmartGridready/SGrSpecifications'
          ref: ${{ steps.set_tag.outputs.original_tag }}
          path: SGrSpecifications

      - name: Checkout SGrPython Repository
        uses: actions/checkout@v4
        with:
          path: SGrPython

      - name: Generate specification classes with xsdata
        working-directory: SGrPython/specification/src
        run: xsdata generate ../../../SGrSpecifications/SchemaDatabase/SGr -r --package sgr_specification.v0

      - name: Check SGrPython Directory
        run: ls SGrPython

      - name: Modify Specification Setup File
        working-directory: SGrPython/specification
        run: |
          sed -Ei "s/version=\"[^\"]+\",/version=\"${{ steps.set_tag.outputs.semver }}\",/" setup.py
          cat setup.py
          echo ${{ steps.set_tag.outputs.original_tag }}

      - name: Build Specification Package
        working-directory: SGrPython/specification
        run: python setup.py sdist bdist_wheel

      - name: Publish Specification Package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Bump Patch Version
        if: ${{ false }}
        id: version_bump
        working-directory: SGrPython/commhandler
        run: |
          sed -i "s/SGrSpecificationPythontks4r==.*/SGrSpecificationPythontks4r==${{ steps.set_tag.outputs.semver }}/g" requirements.txt
          echo "Updated version to ${{ steps.set_tag.outputs.semver }} in requirements.txt"
          cat requirements.txt

      - name: Create a new Branch
        if: ${{ false }}
        working-directory: SGrPython
        run: |
          git checkout -b version-update-${{ steps.set_tag.outputs.semver }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Bump version to ${{ steps.set_tag.outputs.semver }}"
          git push --set-upstream origin version-update-${{ steps.set_tag.outputs.semver }}

      - name: Create Pull Request
        if: ${{ false }}
        uses: actions/github-script@v6
        with:
          script: |
            const title = `Bump SGr Specification version to ${{ steps.set_tag.outputs.semver }}`
            const body = `This PR is to bump the version in setup.py for SGr Specification to ${{ steps.set_tag.outputs.semver }}`
            const base = 'master'
            const head = `version-update-${{ steps.set_tag.outputs.semver }}`
            const createPullRequest = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              head: head,
              base: base
            });
            console.log("Pull request created: #" + createPullRequest.data.number);
